#include<bits/stdc++.h>
using namespace std;
using ll= long long;
void io_file(){
   #ifndef ONLINE_JUDGE 
      freopen("Input.txt","r",stdin);
      freopen("Output.txt","w",stdout);
   #endif
}
struct Node
{
   int data;
   Node *next;
   Node(int x)
   {
      data=x;
      next=NULL;
   }
};
void print_list(Node *head)
{
   Node *temp=head;
   while(temp!=NULL)
   {
      cout<<temp->data<<" ";
      temp=temp->next;
   }
}
Node *insert_beginning(Node *head,int x)
{
   Node *temp=new Node(x);
   temp->next=head;
   return temp;
}
Node *insert_end(Node *head,int x)
{
   Node *curr=head;
   while(curr->next!=NULL)
   {
      curr=curr->next;
   }
   Node *temp=new Node(x);
   curr->next=temp;
   return head;
}
Node *delete_first(Node *head)
{
   Node *temp=head->next;
   delete head;
   return temp;
}
Node *delete_last(Node *head)
{
   if(head==NULL)
      return NULL;
   if(head->next==NULL) {delete head; return NULL;}
   Node *curr=head;
   while(curr->next->next!=NULL)
   {
      curr=curr->next;
   }
   delete curr->next;
   curr->next=NULL;
   return head;
}
Node *insert_pos(Node *head,int pos,int val)
{
   Node *temp=new Node(val);
   if(pos==1)
   {
      temp->next=head;
      return temp;
   }
   Node *curr=head;
   for(int i=1;i<pos-1 && curr!=NULL;i++)
   {
      curr=curr->next;
   }
   temp->next=curr->next;
   curr->next=temp;
   return head;
}
void search(Node *head,int val)
{
   Node *curr=head;
   int k=1;
   while(curr!=NULL)
   {
      if(curr->data==val)
         {cout<<k;return;}
      k++;
      curr=curr->next;
   }
   cout<<-1;return;
}
signed main()
{
   io_file();
   Node *head=new Node(40);
   head=insert_beginning(head,30);
   head=insert_beginning(head,20);
   head=insert_beginning(head,10);
   head=insert_end(head,50);
   // head=delete_first(head);
   // head=delete_last(head);
   head=insert_pos(head,2,15);
   print_list(head);
   cout<<endl;
   search(head,50);
   
}